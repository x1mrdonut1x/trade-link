/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AppIndexRouteImport } from './routes/_app/index'
import { Route as AppImportRouteRouteImport } from './routes/_app/import/route'
import { Route as AppTasksIndexRouteImport } from './routes/_app/tasks/index'
import { Route as AppEventsIndexRouteImport } from './routes/_app/events/index'
import { Route as AppContactsIndexRouteImport } from './routes/_app/contacts/index'
import { Route as AppCompaniesIndexRouteImport } from './routes/_app/companies/index'
import { Route as AppEventsEventIdIndexRouteImport } from './routes/_app/events/$eventId/index'
import { Route as AppContactsAddIndexRouteImport } from './routes/_app/contacts/add/index'
import { Route as AppContactsContactIdIndexRouteImport } from './routes/_app/contacts/$contactId/index'
import { Route as AppCompaniesAddIndexRouteImport } from './routes/_app/companies/add/index'
import { Route as AppCompaniesCompanyIdIndexRouteImport } from './routes/_app/companies/$companyId/index'
import { Route as AppImport4SuccessRouteImport } from './routes/_app/import/_4/success'
import { Route as AppImport3ReviewRouteImport } from './routes/_app/import/_3/review'
import { Route as AppImport2MapRouteImport } from './routes/_app/import/_2/map'
import { Route as AppImport1UploadRouteImport } from './routes/_app/import/_1/upload'
import { Route as AppContactsContactIdEditIndexRouteImport } from './routes/_app/contacts/$contactId/edit/index'
import { Route as AppCompaniesCompanyIdEditIndexRouteImport } from './routes/_app/companies/$companyId/edit/index'

const AppIndexRoute = AppIndexRouteImport.update({
  id: '/_app/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppImportRouteRoute = AppImportRouteRouteImport.update({
  id: '/_app/import',
  path: '/import',
  getParentRoute: () => rootRouteImport,
} as any)
const AppTasksIndexRoute = AppTasksIndexRouteImport.update({
  id: '/_app/tasks/',
  path: '/tasks/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppEventsIndexRoute = AppEventsIndexRouteImport.update({
  id: '/_app/events/',
  path: '/events/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppContactsIndexRoute = AppContactsIndexRouteImport.update({
  id: '/_app/contacts/',
  path: '/contacts/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppCompaniesIndexRoute = AppCompaniesIndexRouteImport.update({
  id: '/_app/companies/',
  path: '/companies/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppEventsEventIdIndexRoute = AppEventsEventIdIndexRouteImport.update({
  id: '/_app/events/$eventId/',
  path: '/events/$eventId/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppContactsAddIndexRoute = AppContactsAddIndexRouteImport.update({
  id: '/_app/contacts/add/',
  path: '/contacts/add/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppContactsContactIdIndexRoute =
  AppContactsContactIdIndexRouteImport.update({
    id: '/_app/contacts/$contactId/',
    path: '/contacts/$contactId/',
    getParentRoute: () => rootRouteImport,
  } as any)
const AppCompaniesAddIndexRoute = AppCompaniesAddIndexRouteImport.update({
  id: '/_app/companies/add/',
  path: '/companies/add/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppCompaniesCompanyIdIndexRoute =
  AppCompaniesCompanyIdIndexRouteImport.update({
    id: '/_app/companies/$companyId/',
    path: '/companies/$companyId/',
    getParentRoute: () => rootRouteImport,
  } as any)
const AppImport4SuccessRoute = AppImport4SuccessRouteImport.update({
  id: '/_4/success',
  path: '/success',
  getParentRoute: () => AppImportRouteRoute,
} as any)
const AppImport3ReviewRoute = AppImport3ReviewRouteImport.update({
  id: '/_3/review',
  path: '/review',
  getParentRoute: () => AppImportRouteRoute,
} as any)
const AppImport2MapRoute = AppImport2MapRouteImport.update({
  id: '/_2/map',
  path: '/map',
  getParentRoute: () => AppImportRouteRoute,
} as any)
const AppImport1UploadRoute = AppImport1UploadRouteImport.update({
  id: '/_1/upload',
  path: '/upload',
  getParentRoute: () => AppImportRouteRoute,
} as any)
const AppContactsContactIdEditIndexRoute =
  AppContactsContactIdEditIndexRouteImport.update({
    id: '/_app/contacts/$contactId/edit/',
    path: '/contacts/$contactId/edit/',
    getParentRoute: () => rootRouteImport,
  } as any)
const AppCompaniesCompanyIdEditIndexRoute =
  AppCompaniesCompanyIdEditIndexRouteImport.update({
    id: '/_app/companies/$companyId/edit/',
    path: '/companies/$companyId/edit/',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/import': typeof AppImportRouteRouteWithChildren
  '/': typeof AppIndexRoute
  '/companies': typeof AppCompaniesIndexRoute
  '/contacts': typeof AppContactsIndexRoute
  '/events': typeof AppEventsIndexRoute
  '/tasks': typeof AppTasksIndexRoute
  '/import/upload': typeof AppImport1UploadRoute
  '/import/map': typeof AppImport2MapRoute
  '/import/review': typeof AppImport3ReviewRoute
  '/import/success': typeof AppImport4SuccessRoute
  '/companies/$companyId': typeof AppCompaniesCompanyIdIndexRoute
  '/companies/add': typeof AppCompaniesAddIndexRoute
  '/contacts/$contactId': typeof AppContactsContactIdIndexRoute
  '/contacts/add': typeof AppContactsAddIndexRoute
  '/events/$eventId': typeof AppEventsEventIdIndexRoute
  '/companies/$companyId/edit': typeof AppCompaniesCompanyIdEditIndexRoute
  '/contacts/$contactId/edit': typeof AppContactsContactIdEditIndexRoute
}
export interface FileRoutesByTo {
  '/import': typeof AppImportRouteRouteWithChildren
  '/': typeof AppIndexRoute
  '/companies': typeof AppCompaniesIndexRoute
  '/contacts': typeof AppContactsIndexRoute
  '/events': typeof AppEventsIndexRoute
  '/tasks': typeof AppTasksIndexRoute
  '/import/upload': typeof AppImport1UploadRoute
  '/import/map': typeof AppImport2MapRoute
  '/import/review': typeof AppImport3ReviewRoute
  '/import/success': typeof AppImport4SuccessRoute
  '/companies/$companyId': typeof AppCompaniesCompanyIdIndexRoute
  '/companies/add': typeof AppCompaniesAddIndexRoute
  '/contacts/$contactId': typeof AppContactsContactIdIndexRoute
  '/contacts/add': typeof AppContactsAddIndexRoute
  '/events/$eventId': typeof AppEventsEventIdIndexRoute
  '/companies/$companyId/edit': typeof AppCompaniesCompanyIdEditIndexRoute
  '/contacts/$contactId/edit': typeof AppContactsContactIdEditIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app/import': typeof AppImportRouteRouteWithChildren
  '/_app/': typeof AppIndexRoute
  '/_app/companies/': typeof AppCompaniesIndexRoute
  '/_app/contacts/': typeof AppContactsIndexRoute
  '/_app/events/': typeof AppEventsIndexRoute
  '/_app/tasks/': typeof AppTasksIndexRoute
  '/_app/import/_1/upload': typeof AppImport1UploadRoute
  '/_app/import/_2/map': typeof AppImport2MapRoute
  '/_app/import/_3/review': typeof AppImport3ReviewRoute
  '/_app/import/_4/success': typeof AppImport4SuccessRoute
  '/_app/companies/$companyId/': typeof AppCompaniesCompanyIdIndexRoute
  '/_app/companies/add/': typeof AppCompaniesAddIndexRoute
  '/_app/contacts/$contactId/': typeof AppContactsContactIdIndexRoute
  '/_app/contacts/add/': typeof AppContactsAddIndexRoute
  '/_app/events/$eventId/': typeof AppEventsEventIdIndexRoute
  '/_app/companies/$companyId/edit/': typeof AppCompaniesCompanyIdEditIndexRoute
  '/_app/contacts/$contactId/edit/': typeof AppContactsContactIdEditIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/import'
    | '/'
    | '/companies'
    | '/contacts'
    | '/events'
    | '/tasks'
    | '/import/upload'
    | '/import/map'
    | '/import/review'
    | '/import/success'
    | '/companies/$companyId'
    | '/companies/add'
    | '/contacts/$contactId'
    | '/contacts/add'
    | '/events/$eventId'
    | '/companies/$companyId/edit'
    | '/contacts/$contactId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/import'
    | '/'
    | '/companies'
    | '/contacts'
    | '/events'
    | '/tasks'
    | '/import/upload'
    | '/import/map'
    | '/import/review'
    | '/import/success'
    | '/companies/$companyId'
    | '/companies/add'
    | '/contacts/$contactId'
    | '/contacts/add'
    | '/events/$eventId'
    | '/companies/$companyId/edit'
    | '/contacts/$contactId/edit'
  id:
    | '__root__'
    | '/_app/import'
    | '/_app/'
    | '/_app/companies/'
    | '/_app/contacts/'
    | '/_app/events/'
    | '/_app/tasks/'
    | '/_app/import/_1/upload'
    | '/_app/import/_2/map'
    | '/_app/import/_3/review'
    | '/_app/import/_4/success'
    | '/_app/companies/$companyId/'
    | '/_app/companies/add/'
    | '/_app/contacts/$contactId/'
    | '/_app/contacts/add/'
    | '/_app/events/$eventId/'
    | '/_app/companies/$companyId/edit/'
    | '/_app/contacts/$contactId/edit/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppImportRouteRoute: typeof AppImportRouteRouteWithChildren
  AppIndexRoute: typeof AppIndexRoute
  AppCompaniesIndexRoute: typeof AppCompaniesIndexRoute
  AppContactsIndexRoute: typeof AppContactsIndexRoute
  AppEventsIndexRoute: typeof AppEventsIndexRoute
  AppTasksIndexRoute: typeof AppTasksIndexRoute
  AppCompaniesCompanyIdIndexRoute: typeof AppCompaniesCompanyIdIndexRoute
  AppCompaniesAddIndexRoute: typeof AppCompaniesAddIndexRoute
  AppContactsContactIdIndexRoute: typeof AppContactsContactIdIndexRoute
  AppContactsAddIndexRoute: typeof AppContactsAddIndexRoute
  AppEventsEventIdIndexRoute: typeof AppEventsEventIdIndexRoute
  AppCompaniesCompanyIdEditIndexRoute: typeof AppCompaniesCompanyIdEditIndexRoute
  AppContactsContactIdEditIndexRoute: typeof AppContactsContactIdEditIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/import': {
      id: '/_app/import'
      path: '/import'
      fullPath: '/import'
      preLoaderRoute: typeof AppImportRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/tasks/': {
      id: '/_app/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof AppTasksIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/events/': {
      id: '/_app/events/'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof AppEventsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/contacts/': {
      id: '/_app/contacts/'
      path: '/contacts'
      fullPath: '/contacts'
      preLoaderRoute: typeof AppContactsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/companies/': {
      id: '/_app/companies/'
      path: '/companies'
      fullPath: '/companies'
      preLoaderRoute: typeof AppCompaniesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/events/$eventId/': {
      id: '/_app/events/$eventId/'
      path: '/events/$eventId'
      fullPath: '/events/$eventId'
      preLoaderRoute: typeof AppEventsEventIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/contacts/add/': {
      id: '/_app/contacts/add/'
      path: '/contacts/add'
      fullPath: '/contacts/add'
      preLoaderRoute: typeof AppContactsAddIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/contacts/$contactId/': {
      id: '/_app/contacts/$contactId/'
      path: '/contacts/$contactId'
      fullPath: '/contacts/$contactId'
      preLoaderRoute: typeof AppContactsContactIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/companies/add/': {
      id: '/_app/companies/add/'
      path: '/companies/add'
      fullPath: '/companies/add'
      preLoaderRoute: typeof AppCompaniesAddIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/companies/$companyId/': {
      id: '/_app/companies/$companyId/'
      path: '/companies/$companyId'
      fullPath: '/companies/$companyId'
      preLoaderRoute: typeof AppCompaniesCompanyIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/import/_4/success': {
      id: '/_app/import/_4/success'
      path: '/success'
      fullPath: '/import/success'
      preLoaderRoute: typeof AppImport4SuccessRouteImport
      parentRoute: typeof AppImportRouteRoute
    }
    '/_app/import/_3/review': {
      id: '/_app/import/_3/review'
      path: '/review'
      fullPath: '/import/review'
      preLoaderRoute: typeof AppImport3ReviewRouteImport
      parentRoute: typeof AppImportRouteRoute
    }
    '/_app/import/_2/map': {
      id: '/_app/import/_2/map'
      path: '/map'
      fullPath: '/import/map'
      preLoaderRoute: typeof AppImport2MapRouteImport
      parentRoute: typeof AppImportRouteRoute
    }
    '/_app/import/_1/upload': {
      id: '/_app/import/_1/upload'
      path: '/upload'
      fullPath: '/import/upload'
      preLoaderRoute: typeof AppImport1UploadRouteImport
      parentRoute: typeof AppImportRouteRoute
    }
    '/_app/contacts/$contactId/edit/': {
      id: '/_app/contacts/$contactId/edit/'
      path: '/contacts/$contactId/edit'
      fullPath: '/contacts/$contactId/edit'
      preLoaderRoute: typeof AppContactsContactIdEditIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/companies/$companyId/edit/': {
      id: '/_app/companies/$companyId/edit/'
      path: '/companies/$companyId/edit'
      fullPath: '/companies/$companyId/edit'
      preLoaderRoute: typeof AppCompaniesCompanyIdEditIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface AppImportRouteRouteChildren {
  AppImport1UploadRoute: typeof AppImport1UploadRoute
  AppImport2MapRoute: typeof AppImport2MapRoute
  AppImport3ReviewRoute: typeof AppImport3ReviewRoute
  AppImport4SuccessRoute: typeof AppImport4SuccessRoute
}

const AppImportRouteRouteChildren: AppImportRouteRouteChildren = {
  AppImport1UploadRoute: AppImport1UploadRoute,
  AppImport2MapRoute: AppImport2MapRoute,
  AppImport3ReviewRoute: AppImport3ReviewRoute,
  AppImport4SuccessRoute: AppImport4SuccessRoute,
}

const AppImportRouteRouteWithChildren = AppImportRouteRoute._addFileChildren(
  AppImportRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AppImportRouteRoute: AppImportRouteRouteWithChildren,
  AppIndexRoute: AppIndexRoute,
  AppCompaniesIndexRoute: AppCompaniesIndexRoute,
  AppContactsIndexRoute: AppContactsIndexRoute,
  AppEventsIndexRoute: AppEventsIndexRoute,
  AppTasksIndexRoute: AppTasksIndexRoute,
  AppCompaniesCompanyIdIndexRoute: AppCompaniesCompanyIdIndexRoute,
  AppCompaniesAddIndexRoute: AppCompaniesAddIndexRoute,
  AppContactsContactIdIndexRoute: AppContactsContactIdIndexRoute,
  AppContactsAddIndexRoute: AppContactsAddIndexRoute,
  AppEventsEventIdIndexRoute: AppEventsEventIdIndexRoute,
  AppCompaniesCompanyIdEditIndexRoute: AppCompaniesCompanyIdEditIndexRoute,
  AppContactsContactIdEditIndexRoute: AppContactsContactIdEditIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
