/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AppIndexRouteImport } from './routes/_app/index'
import { Route as AppEventsIndexRouteImport } from './routes/_app/events/index'
import { Route as AppCompaniesIndexRouteImport } from './routes/_app/companies/index'
import { Route as AppAgentsIndexRouteImport } from './routes/_app/agents/index'

const AppIndexRoute = AppIndexRouteImport.update({
  id: '/_app/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppEventsIndexRoute = AppEventsIndexRouteImport.update({
  id: '/_app/events/',
  path: '/events/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppCompaniesIndexRoute = AppCompaniesIndexRouteImport.update({
  id: '/_app/companies/',
  path: '/companies/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppAgentsIndexRoute = AppAgentsIndexRouteImport.update({
  id: '/_app/agents/',
  path: '/agents/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof AppIndexRoute
  '/agents': typeof AppAgentsIndexRoute
  '/companies': typeof AppCompaniesIndexRoute
  '/events': typeof AppEventsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof AppIndexRoute
  '/agents': typeof AppAgentsIndexRoute
  '/companies': typeof AppCompaniesIndexRoute
  '/events': typeof AppEventsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app/': typeof AppIndexRoute
  '/_app/agents/': typeof AppAgentsIndexRoute
  '/_app/companies/': typeof AppCompaniesIndexRoute
  '/_app/events/': typeof AppEventsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/agents' | '/companies' | '/events'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/agents' | '/companies' | '/events'
  id:
    | '__root__'
    | '/_app/'
    | '/_app/agents/'
    | '/_app/companies/'
    | '/_app/events/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppIndexRoute: typeof AppIndexRoute
  AppAgentsIndexRoute: typeof AppAgentsIndexRoute
  AppCompaniesIndexRoute: typeof AppCompaniesIndexRoute
  AppEventsIndexRoute: typeof AppEventsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/events/': {
      id: '/_app/events/'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof AppEventsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/companies/': {
      id: '/_app/companies/'
      path: '/companies'
      fullPath: '/companies'
      preLoaderRoute: typeof AppCompaniesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/agents/': {
      id: '/_app/agents/'
      path: '/agents'
      fullPath: '/agents'
      preLoaderRoute: typeof AppAgentsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  AppIndexRoute: AppIndexRoute,
  AppAgentsIndexRoute: AppAgentsIndexRoute,
  AppCompaniesIndexRoute: AppCompaniesIndexRoute,
  AppEventsIndexRoute: AppEventsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
