/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AppIndexRouteImport } from './routes/_app/index'
import { Route as AppTenantIdRouteRouteImport } from './routes/_app/$tenantId/route'
import { Route as AppTenantIdIndexRouteImport } from './routes/_app/$tenantId/index'
import { Route as AppTenantIdSettingsRouteRouteImport } from './routes/_app/$tenantId/settings/route'
import { Route as AppTenantIdImportRouteRouteImport } from './routes/_app/$tenantId/import/route'
import { Route as AppTenantIdTasksIndexRouteImport } from './routes/_app/$tenantId/tasks/index'
import { Route as AppTenantIdEventsIndexRouteImport } from './routes/_app/$tenantId/events/index'
import { Route as AppTenantIdContactsIndexRouteImport } from './routes/_app/$tenantId/contacts/index'
import { Route as AppTenantIdCompaniesIndexRouteImport } from './routes/_app/$tenantId/companies/index'
import { Route as AppTenantIdEventsEventIdIndexRouteImport } from './routes/_app/$tenantId/events/$eventId/index'
import { Route as AppTenantIdContactsAddIndexRouteImport } from './routes/_app/$tenantId/contacts/add/index'
import { Route as AppTenantIdContactsContactIdIndexRouteImport } from './routes/_app/$tenantId/contacts/$contactId/index'
import { Route as AppTenantIdCompaniesAddIndexRouteImport } from './routes/_app/$tenantId/companies/add/index'
import { Route as AppTenantIdCompaniesCompanyIdIndexRouteImport } from './routes/_app/$tenantId/companies/$companyId/index'
import { Route as AppTenantIdImport4SuccessRouteImport } from './routes/_app/$tenantId/import/_4/success'
import { Route as AppTenantIdImport3ReviewRouteImport } from './routes/_app/$tenantId/import/_3/review'
import { Route as AppTenantIdImport2MapRouteImport } from './routes/_app/$tenantId/import/_2/map'
import { Route as AppTenantIdImport1UploadRouteImport } from './routes/_app/$tenantId/import/_1/upload'
import { Route as AppTenantIdContactsContactIdEditIndexRouteImport } from './routes/_app/$tenantId/contacts/$contactId/edit/index'
import { Route as AppTenantIdCompaniesCompanyIdEditIndexRouteImport } from './routes/_app/$tenantId/companies/$companyId/edit/index'

const AppIndexRoute = AppIndexRouteImport.update({
  id: '/_app/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppTenantIdRouteRoute = AppTenantIdRouteRouteImport.update({
  id: '/_app/$tenantId',
  path: '/$tenantId',
  getParentRoute: () => rootRouteImport,
} as any)
const AppTenantIdIndexRoute = AppTenantIdIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppTenantIdRouteRoute,
} as any)
const AppTenantIdSettingsRouteRoute =
  AppTenantIdSettingsRouteRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AppTenantIdRouteRoute,
  } as any)
const AppTenantIdImportRouteRoute = AppTenantIdImportRouteRouteImport.update({
  id: '/import',
  path: '/import',
  getParentRoute: () => AppTenantIdRouteRoute,
} as any)
const AppTenantIdTasksIndexRoute = AppTenantIdTasksIndexRouteImport.update({
  id: '/tasks/',
  path: '/tasks/',
  getParentRoute: () => AppTenantIdRouteRoute,
} as any)
const AppTenantIdEventsIndexRoute = AppTenantIdEventsIndexRouteImport.update({
  id: '/events/',
  path: '/events/',
  getParentRoute: () => AppTenantIdRouteRoute,
} as any)
const AppTenantIdContactsIndexRoute =
  AppTenantIdContactsIndexRouteImport.update({
    id: '/contacts/',
    path: '/contacts/',
    getParentRoute: () => AppTenantIdRouteRoute,
  } as any)
const AppTenantIdCompaniesIndexRoute =
  AppTenantIdCompaniesIndexRouteImport.update({
    id: '/companies/',
    path: '/companies/',
    getParentRoute: () => AppTenantIdRouteRoute,
  } as any)
const AppTenantIdEventsEventIdIndexRoute =
  AppTenantIdEventsEventIdIndexRouteImport.update({
    id: '/events/$eventId/',
    path: '/events/$eventId/',
    getParentRoute: () => AppTenantIdRouteRoute,
  } as any)
const AppTenantIdContactsAddIndexRoute =
  AppTenantIdContactsAddIndexRouteImport.update({
    id: '/contacts/add/',
    path: '/contacts/add/',
    getParentRoute: () => AppTenantIdRouteRoute,
  } as any)
const AppTenantIdContactsContactIdIndexRoute =
  AppTenantIdContactsContactIdIndexRouteImport.update({
    id: '/contacts/$contactId/',
    path: '/contacts/$contactId/',
    getParentRoute: () => AppTenantIdRouteRoute,
  } as any)
const AppTenantIdCompaniesAddIndexRoute =
  AppTenantIdCompaniesAddIndexRouteImport.update({
    id: '/companies/add/',
    path: '/companies/add/',
    getParentRoute: () => AppTenantIdRouteRoute,
  } as any)
const AppTenantIdCompaniesCompanyIdIndexRoute =
  AppTenantIdCompaniesCompanyIdIndexRouteImport.update({
    id: '/companies/$companyId/',
    path: '/companies/$companyId/',
    getParentRoute: () => AppTenantIdRouteRoute,
  } as any)
const AppTenantIdImport4SuccessRoute =
  AppTenantIdImport4SuccessRouteImport.update({
    id: '/_4/success',
    path: '/success',
    getParentRoute: () => AppTenantIdImportRouteRoute,
  } as any)
const AppTenantIdImport3ReviewRoute =
  AppTenantIdImport3ReviewRouteImport.update({
    id: '/_3/review',
    path: '/review',
    getParentRoute: () => AppTenantIdImportRouteRoute,
  } as any)
const AppTenantIdImport2MapRoute = AppTenantIdImport2MapRouteImport.update({
  id: '/_2/map',
  path: '/map',
  getParentRoute: () => AppTenantIdImportRouteRoute,
} as any)
const AppTenantIdImport1UploadRoute =
  AppTenantIdImport1UploadRouteImport.update({
    id: '/_1/upload',
    path: '/upload',
    getParentRoute: () => AppTenantIdImportRouteRoute,
  } as any)
const AppTenantIdContactsContactIdEditIndexRoute =
  AppTenantIdContactsContactIdEditIndexRouteImport.update({
    id: '/contacts/$contactId/edit/',
    path: '/contacts/$contactId/edit/',
    getParentRoute: () => AppTenantIdRouteRoute,
  } as any)
const AppTenantIdCompaniesCompanyIdEditIndexRoute =
  AppTenantIdCompaniesCompanyIdEditIndexRouteImport.update({
    id: '/companies/$companyId/edit/',
    path: '/companies/$companyId/edit/',
    getParentRoute: () => AppTenantIdRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/$tenantId': typeof AppTenantIdRouteRouteWithChildren
  '/': typeof AppIndexRoute
  '/$tenantId/import': typeof AppTenantIdImportRouteRouteWithChildren
  '/$tenantId/settings': typeof AppTenantIdSettingsRouteRoute
  '/$tenantId/': typeof AppTenantIdIndexRoute
  '/$tenantId/companies': typeof AppTenantIdCompaniesIndexRoute
  '/$tenantId/contacts': typeof AppTenantIdContactsIndexRoute
  '/$tenantId/events': typeof AppTenantIdEventsIndexRoute
  '/$tenantId/tasks': typeof AppTenantIdTasksIndexRoute
  '/$tenantId/import/upload': typeof AppTenantIdImport1UploadRoute
  '/$tenantId/import/map': typeof AppTenantIdImport2MapRoute
  '/$tenantId/import/review': typeof AppTenantIdImport3ReviewRoute
  '/$tenantId/import/success': typeof AppTenantIdImport4SuccessRoute
  '/$tenantId/companies/$companyId': typeof AppTenantIdCompaniesCompanyIdIndexRoute
  '/$tenantId/companies/add': typeof AppTenantIdCompaniesAddIndexRoute
  '/$tenantId/contacts/$contactId': typeof AppTenantIdContactsContactIdIndexRoute
  '/$tenantId/contacts/add': typeof AppTenantIdContactsAddIndexRoute
  '/$tenantId/events/$eventId': typeof AppTenantIdEventsEventIdIndexRoute
  '/$tenantId/companies/$companyId/edit': typeof AppTenantIdCompaniesCompanyIdEditIndexRoute
  '/$tenantId/contacts/$contactId/edit': typeof AppTenantIdContactsContactIdEditIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof AppIndexRoute
  '/$tenantId/import': typeof AppTenantIdImportRouteRouteWithChildren
  '/$tenantId/settings': typeof AppTenantIdSettingsRouteRoute
  '/$tenantId': typeof AppTenantIdIndexRoute
  '/$tenantId/companies': typeof AppTenantIdCompaniesIndexRoute
  '/$tenantId/contacts': typeof AppTenantIdContactsIndexRoute
  '/$tenantId/events': typeof AppTenantIdEventsIndexRoute
  '/$tenantId/tasks': typeof AppTenantIdTasksIndexRoute
  '/$tenantId/import/upload': typeof AppTenantIdImport1UploadRoute
  '/$tenantId/import/map': typeof AppTenantIdImport2MapRoute
  '/$tenantId/import/review': typeof AppTenantIdImport3ReviewRoute
  '/$tenantId/import/success': typeof AppTenantIdImport4SuccessRoute
  '/$tenantId/companies/$companyId': typeof AppTenantIdCompaniesCompanyIdIndexRoute
  '/$tenantId/companies/add': typeof AppTenantIdCompaniesAddIndexRoute
  '/$tenantId/contacts/$contactId': typeof AppTenantIdContactsContactIdIndexRoute
  '/$tenantId/contacts/add': typeof AppTenantIdContactsAddIndexRoute
  '/$tenantId/events/$eventId': typeof AppTenantIdEventsEventIdIndexRoute
  '/$tenantId/companies/$companyId/edit': typeof AppTenantIdCompaniesCompanyIdEditIndexRoute
  '/$tenantId/contacts/$contactId/edit': typeof AppTenantIdContactsContactIdEditIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app/$tenantId': typeof AppTenantIdRouteRouteWithChildren
  '/_app/': typeof AppIndexRoute
  '/_app/$tenantId/import': typeof AppTenantIdImportRouteRouteWithChildren
  '/_app/$tenantId/settings': typeof AppTenantIdSettingsRouteRoute
  '/_app/$tenantId/': typeof AppTenantIdIndexRoute
  '/_app/$tenantId/companies/': typeof AppTenantIdCompaniesIndexRoute
  '/_app/$tenantId/contacts/': typeof AppTenantIdContactsIndexRoute
  '/_app/$tenantId/events/': typeof AppTenantIdEventsIndexRoute
  '/_app/$tenantId/tasks/': typeof AppTenantIdTasksIndexRoute
  '/_app/$tenantId/import/_1/upload': typeof AppTenantIdImport1UploadRoute
  '/_app/$tenantId/import/_2/map': typeof AppTenantIdImport2MapRoute
  '/_app/$tenantId/import/_3/review': typeof AppTenantIdImport3ReviewRoute
  '/_app/$tenantId/import/_4/success': typeof AppTenantIdImport4SuccessRoute
  '/_app/$tenantId/companies/$companyId/': typeof AppTenantIdCompaniesCompanyIdIndexRoute
  '/_app/$tenantId/companies/add/': typeof AppTenantIdCompaniesAddIndexRoute
  '/_app/$tenantId/contacts/$contactId/': typeof AppTenantIdContactsContactIdIndexRoute
  '/_app/$tenantId/contacts/add/': typeof AppTenantIdContactsAddIndexRoute
  '/_app/$tenantId/events/$eventId/': typeof AppTenantIdEventsEventIdIndexRoute
  '/_app/$tenantId/companies/$companyId/edit/': typeof AppTenantIdCompaniesCompanyIdEditIndexRoute
  '/_app/$tenantId/contacts/$contactId/edit/': typeof AppTenantIdContactsContactIdEditIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/$tenantId'
    | '/'
    | '/$tenantId/import'
    | '/$tenantId/settings'
    | '/$tenantId/'
    | '/$tenantId/companies'
    | '/$tenantId/contacts'
    | '/$tenantId/events'
    | '/$tenantId/tasks'
    | '/$tenantId/import/upload'
    | '/$tenantId/import/map'
    | '/$tenantId/import/review'
    | '/$tenantId/import/success'
    | '/$tenantId/companies/$companyId'
    | '/$tenantId/companies/add'
    | '/$tenantId/contacts/$contactId'
    | '/$tenantId/contacts/add'
    | '/$tenantId/events/$eventId'
    | '/$tenantId/companies/$companyId/edit'
    | '/$tenantId/contacts/$contactId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$tenantId/import'
    | '/$tenantId/settings'
    | '/$tenantId'
    | '/$tenantId/companies'
    | '/$tenantId/contacts'
    | '/$tenantId/events'
    | '/$tenantId/tasks'
    | '/$tenantId/import/upload'
    | '/$tenantId/import/map'
    | '/$tenantId/import/review'
    | '/$tenantId/import/success'
    | '/$tenantId/companies/$companyId'
    | '/$tenantId/companies/add'
    | '/$tenantId/contacts/$contactId'
    | '/$tenantId/contacts/add'
    | '/$tenantId/events/$eventId'
    | '/$tenantId/companies/$companyId/edit'
    | '/$tenantId/contacts/$contactId/edit'
  id:
    | '__root__'
    | '/_app/$tenantId'
    | '/_app/'
    | '/_app/$tenantId/import'
    | '/_app/$tenantId/settings'
    | '/_app/$tenantId/'
    | '/_app/$tenantId/companies/'
    | '/_app/$tenantId/contacts/'
    | '/_app/$tenantId/events/'
    | '/_app/$tenantId/tasks/'
    | '/_app/$tenantId/import/_1/upload'
    | '/_app/$tenantId/import/_2/map'
    | '/_app/$tenantId/import/_3/review'
    | '/_app/$tenantId/import/_4/success'
    | '/_app/$tenantId/companies/$companyId/'
    | '/_app/$tenantId/companies/add/'
    | '/_app/$tenantId/contacts/$contactId/'
    | '/_app/$tenantId/contacts/add/'
    | '/_app/$tenantId/events/$eventId/'
    | '/_app/$tenantId/companies/$companyId/edit/'
    | '/_app/$tenantId/contacts/$contactId/edit/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppTenantIdRouteRoute: typeof AppTenantIdRouteRouteWithChildren
  AppIndexRoute: typeof AppIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/$tenantId': {
      id: '/_app/$tenantId'
      path: '/$tenantId'
      fullPath: '/$tenantId'
      preLoaderRoute: typeof AppTenantIdRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/$tenantId/': {
      id: '/_app/$tenantId/'
      path: '/'
      fullPath: '/$tenantId/'
      preLoaderRoute: typeof AppTenantIdIndexRouteImport
      parentRoute: typeof AppTenantIdRouteRoute
    }
    '/_app/$tenantId/settings': {
      id: '/_app/$tenantId/settings'
      path: '/settings'
      fullPath: '/$tenantId/settings'
      preLoaderRoute: typeof AppTenantIdSettingsRouteRouteImport
      parentRoute: typeof AppTenantIdRouteRoute
    }
    '/_app/$tenantId/import': {
      id: '/_app/$tenantId/import'
      path: '/import'
      fullPath: '/$tenantId/import'
      preLoaderRoute: typeof AppTenantIdImportRouteRouteImport
      parentRoute: typeof AppTenantIdRouteRoute
    }
    '/_app/$tenantId/tasks/': {
      id: '/_app/$tenantId/tasks/'
      path: '/tasks'
      fullPath: '/$tenantId/tasks'
      preLoaderRoute: typeof AppTenantIdTasksIndexRouteImport
      parentRoute: typeof AppTenantIdRouteRoute
    }
    '/_app/$tenantId/events/': {
      id: '/_app/$tenantId/events/'
      path: '/events'
      fullPath: '/$tenantId/events'
      preLoaderRoute: typeof AppTenantIdEventsIndexRouteImport
      parentRoute: typeof AppTenantIdRouteRoute
    }
    '/_app/$tenantId/contacts/': {
      id: '/_app/$tenantId/contacts/'
      path: '/contacts'
      fullPath: '/$tenantId/contacts'
      preLoaderRoute: typeof AppTenantIdContactsIndexRouteImport
      parentRoute: typeof AppTenantIdRouteRoute
    }
    '/_app/$tenantId/companies/': {
      id: '/_app/$tenantId/companies/'
      path: '/companies'
      fullPath: '/$tenantId/companies'
      preLoaderRoute: typeof AppTenantIdCompaniesIndexRouteImport
      parentRoute: typeof AppTenantIdRouteRoute
    }
    '/_app/$tenantId/events/$eventId/': {
      id: '/_app/$tenantId/events/$eventId/'
      path: '/events/$eventId'
      fullPath: '/$tenantId/events/$eventId'
      preLoaderRoute: typeof AppTenantIdEventsEventIdIndexRouteImport
      parentRoute: typeof AppTenantIdRouteRoute
    }
    '/_app/$tenantId/contacts/add/': {
      id: '/_app/$tenantId/contacts/add/'
      path: '/contacts/add'
      fullPath: '/$tenantId/contacts/add'
      preLoaderRoute: typeof AppTenantIdContactsAddIndexRouteImport
      parentRoute: typeof AppTenantIdRouteRoute
    }
    '/_app/$tenantId/contacts/$contactId/': {
      id: '/_app/$tenantId/contacts/$contactId/'
      path: '/contacts/$contactId'
      fullPath: '/$tenantId/contacts/$contactId'
      preLoaderRoute: typeof AppTenantIdContactsContactIdIndexRouteImport
      parentRoute: typeof AppTenantIdRouteRoute
    }
    '/_app/$tenantId/companies/add/': {
      id: '/_app/$tenantId/companies/add/'
      path: '/companies/add'
      fullPath: '/$tenantId/companies/add'
      preLoaderRoute: typeof AppTenantIdCompaniesAddIndexRouteImport
      parentRoute: typeof AppTenantIdRouteRoute
    }
    '/_app/$tenantId/companies/$companyId/': {
      id: '/_app/$tenantId/companies/$companyId/'
      path: '/companies/$companyId'
      fullPath: '/$tenantId/companies/$companyId'
      preLoaderRoute: typeof AppTenantIdCompaniesCompanyIdIndexRouteImport
      parentRoute: typeof AppTenantIdRouteRoute
    }
    '/_app/$tenantId/import/_4/success': {
      id: '/_app/$tenantId/import/_4/success'
      path: '/success'
      fullPath: '/$tenantId/import/success'
      preLoaderRoute: typeof AppTenantIdImport4SuccessRouteImport
      parentRoute: typeof AppTenantIdImportRouteRoute
    }
    '/_app/$tenantId/import/_3/review': {
      id: '/_app/$tenantId/import/_3/review'
      path: '/review'
      fullPath: '/$tenantId/import/review'
      preLoaderRoute: typeof AppTenantIdImport3ReviewRouteImport
      parentRoute: typeof AppTenantIdImportRouteRoute
    }
    '/_app/$tenantId/import/_2/map': {
      id: '/_app/$tenantId/import/_2/map'
      path: '/map'
      fullPath: '/$tenantId/import/map'
      preLoaderRoute: typeof AppTenantIdImport2MapRouteImport
      parentRoute: typeof AppTenantIdImportRouteRoute
    }
    '/_app/$tenantId/import/_1/upload': {
      id: '/_app/$tenantId/import/_1/upload'
      path: '/upload'
      fullPath: '/$tenantId/import/upload'
      preLoaderRoute: typeof AppTenantIdImport1UploadRouteImport
      parentRoute: typeof AppTenantIdImportRouteRoute
    }
    '/_app/$tenantId/contacts/$contactId/edit/': {
      id: '/_app/$tenantId/contacts/$contactId/edit/'
      path: '/contacts/$contactId/edit'
      fullPath: '/$tenantId/contacts/$contactId/edit'
      preLoaderRoute: typeof AppTenantIdContactsContactIdEditIndexRouteImport
      parentRoute: typeof AppTenantIdRouteRoute
    }
    '/_app/$tenantId/companies/$companyId/edit/': {
      id: '/_app/$tenantId/companies/$companyId/edit/'
      path: '/companies/$companyId/edit'
      fullPath: '/$tenantId/companies/$companyId/edit'
      preLoaderRoute: typeof AppTenantIdCompaniesCompanyIdEditIndexRouteImport
      parentRoute: typeof AppTenantIdRouteRoute
    }
  }
}

interface AppTenantIdImportRouteRouteChildren {
  AppTenantIdImport1UploadRoute: typeof AppTenantIdImport1UploadRoute
  AppTenantIdImport2MapRoute: typeof AppTenantIdImport2MapRoute
  AppTenantIdImport3ReviewRoute: typeof AppTenantIdImport3ReviewRoute
  AppTenantIdImport4SuccessRoute: typeof AppTenantIdImport4SuccessRoute
}

const AppTenantIdImportRouteRouteChildren: AppTenantIdImportRouteRouteChildren =
  {
    AppTenantIdImport1UploadRoute: AppTenantIdImport1UploadRoute,
    AppTenantIdImport2MapRoute: AppTenantIdImport2MapRoute,
    AppTenantIdImport3ReviewRoute: AppTenantIdImport3ReviewRoute,
    AppTenantIdImport4SuccessRoute: AppTenantIdImport4SuccessRoute,
  }

const AppTenantIdImportRouteRouteWithChildren =
  AppTenantIdImportRouteRoute._addFileChildren(
    AppTenantIdImportRouteRouteChildren,
  )

interface AppTenantIdRouteRouteChildren {
  AppTenantIdImportRouteRoute: typeof AppTenantIdImportRouteRouteWithChildren
  AppTenantIdSettingsRouteRoute: typeof AppTenantIdSettingsRouteRoute
  AppTenantIdIndexRoute: typeof AppTenantIdIndexRoute
  AppTenantIdCompaniesIndexRoute: typeof AppTenantIdCompaniesIndexRoute
  AppTenantIdContactsIndexRoute: typeof AppTenantIdContactsIndexRoute
  AppTenantIdEventsIndexRoute: typeof AppTenantIdEventsIndexRoute
  AppTenantIdTasksIndexRoute: typeof AppTenantIdTasksIndexRoute
  AppTenantIdCompaniesCompanyIdIndexRoute: typeof AppTenantIdCompaniesCompanyIdIndexRoute
  AppTenantIdCompaniesAddIndexRoute: typeof AppTenantIdCompaniesAddIndexRoute
  AppTenantIdContactsContactIdIndexRoute: typeof AppTenantIdContactsContactIdIndexRoute
  AppTenantIdContactsAddIndexRoute: typeof AppTenantIdContactsAddIndexRoute
  AppTenantIdEventsEventIdIndexRoute: typeof AppTenantIdEventsEventIdIndexRoute
  AppTenantIdCompaniesCompanyIdEditIndexRoute: typeof AppTenantIdCompaniesCompanyIdEditIndexRoute
  AppTenantIdContactsContactIdEditIndexRoute: typeof AppTenantIdContactsContactIdEditIndexRoute
}

const AppTenantIdRouteRouteChildren: AppTenantIdRouteRouteChildren = {
  AppTenantIdImportRouteRoute: AppTenantIdImportRouteRouteWithChildren,
  AppTenantIdSettingsRouteRoute: AppTenantIdSettingsRouteRoute,
  AppTenantIdIndexRoute: AppTenantIdIndexRoute,
  AppTenantIdCompaniesIndexRoute: AppTenantIdCompaniesIndexRoute,
  AppTenantIdContactsIndexRoute: AppTenantIdContactsIndexRoute,
  AppTenantIdEventsIndexRoute: AppTenantIdEventsIndexRoute,
  AppTenantIdTasksIndexRoute: AppTenantIdTasksIndexRoute,
  AppTenantIdCompaniesCompanyIdIndexRoute:
    AppTenantIdCompaniesCompanyIdIndexRoute,
  AppTenantIdCompaniesAddIndexRoute: AppTenantIdCompaniesAddIndexRoute,
  AppTenantIdContactsContactIdIndexRoute:
    AppTenantIdContactsContactIdIndexRoute,
  AppTenantIdContactsAddIndexRoute: AppTenantIdContactsAddIndexRoute,
  AppTenantIdEventsEventIdIndexRoute: AppTenantIdEventsEventIdIndexRoute,
  AppTenantIdCompaniesCompanyIdEditIndexRoute:
    AppTenantIdCompaniesCompanyIdEditIndexRoute,
  AppTenantIdContactsContactIdEditIndexRoute:
    AppTenantIdContactsContactIdEditIndexRoute,
}

const AppTenantIdRouteRouteWithChildren =
  AppTenantIdRouteRoute._addFileChildren(AppTenantIdRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AppTenantIdRouteRoute: AppTenantIdRouteRouteWithChildren,
  AppIndexRoute: AppIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
